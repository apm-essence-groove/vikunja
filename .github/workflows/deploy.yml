# The Official Heroku Deployment Workflow for Docker
name: Deploy to Heroku

# Run this workflow every time a change is pushed to the 'main' branch
on:
  push:
    branches:
      - 'apm-essense-groove-heroku' # Or 'master', depending on your repository's default branch

# These environment variables will be available to all jobs and steps
env:
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up the Heroku CLI
      - name: Set up Heroku CLI
        uses: anmutu/setup-heroku@v1.0.0
        with:
          heroku_api_key: ${{ env.HEROKU_API_KEY }}

      # Step 3: Log in to the Heroku Container Registry
      - name: Log in to Heroku Container Registry
        run: heroku container:login

      # Step 4: Push the Docker images to Heroku
      - name: Push Docker images to Heroku
        run: |
          heroku container:push --recursive --arg "VIKUNJA_BUILD_TARGET=web,VIKUNJA_API_BUILD_TARGET=api" --app ${{ env.HEROKU_APP_NAME }}

      # Step 5: Set the configuration variables on your Heroku app
      - name: Set Heroku environment variables
        run: |
          heroku config:set VIKUNJA_DATABASE_TYPE=postgres --app ${{ env.HEROKU_APP_NAME }}
          heroku config:set VIKUNJA_SERVICE_FRONTENDURL=https://${{ env.HEROKU_APP_NAME }}.herokuapp.com --app ${{ env.HEROKU_APP_NAME }}
          heroku config:set VIKUNJA_API_URL=https://${{ env.HEROKU_APP_NAME }}.herokuapp.com/api/v1 --app ${{ env.HEROKU_APP_NAME }}
          heroku config:set VIKUNJA_SERVICE_JWTSECRET=${{ secrets.VIKUNJA_SERVICE_JWTSECRET }} --app ${{ env.HEROKU_APP_NAME }}

      # Step 6: Release the new images to run on the app
      - name: Release new images
        run: heroku container:release web api --app ${{ env.HEROKU_APP_NAME }}
