# The Final Heroku Deployment Workflow for Docker
name: Deploy to Heroku

on:
  push:
    branches:
      - 'apm-essense-groove-heroku'

env:
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Log in to Heroku
        run: heroku login -i

      # New step to ensure the app is configured for Docker deployments
      - name: Set the App Stack to Container
        run: heroku stack:set container --app ${{ env.HEROKU_APP_NAME }}

      # The rest of the steps are the same
      - name: Push Docker images to Heroku
        run: |
          heroku container:push --recursive --arg "VIKUNJA_BUILD_TARGET=web,VIKUNJA_API_BUILD_TARGET=api" --app ${{ env.HEROKU_APP_NAME }}

      - name: Set Heroku environment variables
        run: |
          heroku config:set VIKUNJA_DATABASE_TYPE=postgres --app ${{ env.HEROKU_APP_NAME }}
          heroku config:set VIKUNJA_SERVICE_FRONTENDURL=https://${{ env.HEROKU_APP_NAME }}.herokuapp.com --app ${{ env.HEROKU_APP_NAME }}
          heroku config:set VIKUNJA_API_URL=https://${{ env.HEROKU_APP_NAME }}.herokuapp.com/api/v1 --app ${{ env.HEROKU_APP_NAME }}
          heroku config:set VIKUNJA_SERVICE_JWTSECRET=${{ secrets.VIKUNJA_SERVICE_JWTSECRET }} --app ${{ env.HEROKU_APP_NAME }}

      - name: Release new images
        run: heroku container:release web api --app ${{ env.HEROKU_APP_NAME }}
